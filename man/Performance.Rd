% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Performance.R
\name{Performance}
\alias{Performance}
\title{Performance metrics}
\usage{
Performance(..., samples = NULL, regression = TRUE, threshold = NULL,
  rnd = 3)
}
\arguments{
\item{...}{objects of \code{\link{class}} \code{inla}  with computed fitted marginals.}

\item{samples}{\code{NULL} or \code{\link{list}} with resamples. If \code{NULL}, performance metrics are calculated using the entaire dataset. If \code{list}, each element should be a \code{\link{vector}} with indexes to train the model. Indexes out of the vector (out-of-bag samples) are used to calculate performance metrics.}

\item{regression}{logical. If \code{TRUE} (default), the RMSE and R2 are calculated. If \code{FALSE}, the following mwtrics are calculated: accuracy, sensitivity, specificity, Positive Predictive Value (PPV) and Negative Predictive Value (NPV).}

\item{threshold}{When \code{regression = FALSE}, the threshold to assign class probabilities to classes is the value that maximizes \code{max(sensitivities + specificities)} (see details). Class probabilities below the threshold are assigned to \code{min(y)}, where \code{y} is the predicted variable (class probabilities above the threshold are assigned to the other class). If \code{threshold} is provided, it overrides the calculated threshold; it should be a number x such that 0 < x < 1.}

\item{rnd}{integer indicating the number of decimal places to be used.}
}
\value{
\code{vector} or \code{\link{matrix}} with performance metrics.
}
\description{
Calculates performance metrics for regression and classification models..
}
\details{
When \code{regression = FALSE}, the threshold is calculated with the Youoden's algorithm, using the \code{\link{pROC::coords}} function.
}
\examples{
data(sp)

mod1 <- inla(aan ~ f(id, model = 'bym', graph = sp.adj),
             family = 'poisson', data = spn, E = eaan,
             control.predictor=list(link = 1, compute = TRUE))

mod2 <- inla(aan ~ shvn + f(id, model = 'bym', graph = sp.adj),
             family = 'poisson', data = spn, E = eaan,
             control.predictor=list(link = 1, compute = TRUE))
RMSE(mod1, mod2, observed = spn$aan / spn$eaan)
}
